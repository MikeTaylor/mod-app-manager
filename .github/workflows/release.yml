name: release

on:
  workflow_dispatch:
  push:
    tags:
      - '[vV][0-9]+.[0-9]+.[0-9]+*'  # i.e. release tag only

env:
  NODEJS_VERSION: '16'
  FOLIO_MD_REGISTRY: 'https://registry.folio-dev.indexdata.com'
  CONTAINER_REGISTRY: 'ghcr.io'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get version from package.json
        id: package_version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'
      - name: Gather some variables
        run: |
          echo "PACKAGE_VERSION=${{ steps.package_version.outputs.prop }}" >> $GITHUB_ENV
          echo "DEFAULT_BRANCH=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV
      - name: Report some variables
        run: |
          echo "PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}"
          echo "github.REF=${{ github.REF }}"
          echo "DEFAULT_BRANCH=${{ env.DEFAULT_BRANCH }}"
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          always-auth: true

      - name: Set yarn config
        run: yarn config set @folio:registry https://repository.folio.org/repository/npm-folio/
      - name: Run yarn install
        run: yarn install --ignore-scripts
      - name: Run yarn lint
        run: yarn lint
        continue-on-error: true
      - name: Run tests
        run: yarn test
      - name: Publish yarn.lock
        uses: actions/upload-artifact@v3
        with:
          name: yarn.lock
          path: yarn.lock
          retention-days: 5

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.ACTOR }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract docker metadata
        id: dockerMetadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/MikeTaylor/mod-app-store
          labels: |
            org.opencontainers.image.vendor=Mike Taylor
            org.opencontainers.image.documentation=https://github.com/MikeTaylor/mod-app-store/blob/main/README.md
      - name: Build and publish Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.dockerMetadata.outputs.tags }}
          labels: ${{ steps.dockerMetadata.outputs.labels }}

      - name: Generate FOLIO module descriptor
        run: yarn generate
      - name: Print FOLIO module descriptor
        run: cat target/ModuleDescriptor.json
      - name: Read ModuleDescriptor
        id: moduleDescriptor
        uses: juliangruber/read-file-action@v1
        with:
          path: ${{ env.MODULE_DESCRIPTOR }}
      - name: Login to ModuleDescriptor registry
        id: login-md-registry
        uses: indiesdev/curl@v1.1
        with:
          url: "${{ env.FOLIO_MD_REGISTRY }}/authn/login"
          method: "POST"
          accept: 201
          headers: |
            {
              "content-type": "application/json",
              "x-okapi-tenant": "${{ secrets.FOLIO_REGISTRY_TENANT }}"
            }
          body: |
            {
              "username": "${{ secrets.FOLIO_REGISTRY_USERNAME }}",
              "password": "${{ secrets.FOLIO_REGISTRY_PASSWORD }}"
            }
      - name: Extract authentication token for ModuleDescriptor registry session
        run: |
          echo "TOKEN_MD_REGISTRY=${{ fromJSON(steps.login-md-registry.outputs.response).headers['x-okapi-token'] }}" >> $GITHUB_ENV
      - name: Publish ModuleDescriptor to registry
        uses: indiesdev/curl@v1.1
        with:
          url: "${{ env.FOLIO_MD_REGISTRY }}/_/proxy/modules"
          method: "POST"
          accept: 201
          headers: |
            {
              "content-type": "application/json",
              "x-okapi-tenant": "${{ secrets.FOLIO_REGISTRY_TENANT }}",
              "x-okapi-token": "${{ env.TOKEN_MD_REGISTRY }}"
            }
          body: ${{ steps.moduleDescriptor.outputs.content }}
